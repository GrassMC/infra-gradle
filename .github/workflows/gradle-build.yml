name: Gradle Build
on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  validate-wrapper:
    name: Validate Gradle wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

  build:
    name: Build
    needs: validate-wrapper
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Azul JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3.0.0-beta.1
        with:
          dependency-graph: generate-and-submit
          gradle-home-cache-cleanup: true
          gradle-home-cache-includes: |
            caches
            notifications
            jdks

          gradle-home-cache-excludes: |
            caches/build-cache-1
            caches/keyrings

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle Build Scan
        id: build
        run: ./gradlew build --scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add Build Scan URL as PR comment
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå ${{ github.workflow }} failed: ${{ steps.build.outputs.build-scan-url }}'
            })
